<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:sec="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:component-scan base-package="com.mbv.api"/>

    <sec:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" jsr250-annotations="enabled" />

    <import resource="classpath:persist-config.xml" />
    <import resource="classpath:framework-config.xml" />

    <bean id="imageUtil" class="com.mbv.api.util.ImageUtil" />

    <bean id="corsProps" class="com.mbv.api.props.CorsProps">
        <!--<property name="allowedOrigins" value="${com.mbv.api.allowed.origin.domains}" />-->
    </bean>

    <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <constructor-arg>
            <list>
                <sec:filter-chain pattern="/mpokket/api/authenticate/**" filters=""/>
                <sec:filter-chain pattern="/mpokket/api/**" filters="exceptionTranslationFilter,genericRequestFilter,requestCORSFilter,tokenAuthenticationFilter,filterSecurityInterceptor"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="filterSecurityInterceptor"
        class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="securityMetadataSource">
            <sec:filter-security-metadata-source use-expressions="true">
                <sec:intercept-url pattern="/mpokket/api/user/**"     access="hasAnyRole('USER')"/>
                <sec:intercept-url pattern="/mpokket/api/wallet/**"     access="hasAnyRole('USER')"/>
                <sec:intercept-url pattern="/mpokket/api/locations/**"     access="hasAnyRole('USER')"/>
                <sec:intercept-url pattern="/mpokket/api/identity/**"     access="hasAnyRole('USER')"/>
                <sec:intercept-url pattern="/mpokket/api/education/**"     access="hasAnyRole('USER')"/>
                <sec:intercept-url pattern="/mpokket/api/loans/**"     access="hasAnyRole('USER','ADMIN')"/>
                <sec:intercept-url pattern="/mpokket/api/admin/**"     access="hasAnyRole('ADMIN')"/>
                <sec:intercept-url pattern="/mpokket/api/conversations/**"     access="hasAnyRole('USER','ADMIN')"/>
            </sec:filter-security-metadata-source>
        </property>
    </bean>

    <bean id="genericRequestFilter" class="com.mbv.api.auth.GenericRequestFilter"/>

    <bean id="requestCORSFilter" class="com.mbv.api.auth.RequestCORSFilter"/>

    <bean id="tokenAuthenticationFilter" class="com.mbv.api.auth.TokenAuthenticationFilter">
        <property name="cacheClient" ref="cacheClient" />
        <property name="userDAO" ref="userDAO" />
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg index="0" ref= "loginUrlAuthenticationEntryPoint"/>
    </bean>

    <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg index="0" value= "/mpokket/api/authenticate/**"/>
    </bean>

    <bean id="anonymousAuthenticationFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <constructor-arg index="0" value= "MBV"/>
    </bean>

    <bean id="authenticationManager"
        class="org.springframework.security.authentication.ProviderManager" name="org.springframework.security.authenticationManager">
        <property name="providers">
            <list>
                <bean id="tokenAuthenticationProvider" class="com.mbv.api.auth.TokenAuthenticationProvider" />
            </list>
        </property>
    </bean>

    <bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
            </list>
        </constructor-arg>
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>

</beans>